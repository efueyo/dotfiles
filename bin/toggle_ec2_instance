#!/bin/bash

set -e

_select_region() {
  echo
  echo "Select the AWS region: "
  available_regions="us-east-1 eu-west-1 us-east-2 us-west-1 us-west-2 eu-central-1 eu-west-1 eu-west-2 eu-west-3"
  region=$(echo $available_regions | tr ' ' '\n' | fzf --reverse --height 40% )
  export AWS_REGION=$region
}

_select_instance() {
  echo
  echo "Select the EC2 instance: "

  # Get instances with their status and format for selection
  instances_data=$(aws ec2 describe-instances \
    --region $region \
    --query 'Reservations[].Instances[].[InstanceId,Tags[?Key==`Name`].Value|[0],State.Name]' \
    --output text)

  # Format instances for fzf display
  formatted_instances=""
  while IFS=$'\t' read -r instance_id name state; do
    # Handle cases where name might be None or empty
    if [ "$name" == "None" ] || [ -z "$name" ]; then
      name="<no-name>"
    fi

    # Determine action based on state
    case "$state" in
      "running")
        action="-> STOP"
        ;;
      "stopped")
        action="-> START"
        ;;
      "pending")
        action="-> (PENDING)"
        ;;
      "stopping")
        action="-> (STOPPING)"
        ;;
      "terminated")
        action="-> (TERMINATED)"
        ;;
      *)
        action="-> ($state)"
        ;;
    esac

    formatted_instances+="$instance_id $name $state $action"$'\n'
  done <<< "$instances_data"

  if [ -z "$formatted_instances" ]; then
    echo "No EC2 instances found in region $region"
    exit 1
  fi

  # Use fzf to select instance
  selected=$(echo "$formatted_instances" | fzf --reverse --height 40%)

  # Extract instance details
  # Format is: instance_id name... state -> ACTION
  # Parse from the end since the last 3 fields are always: state -> ACTION
  instance_id=$(echo "$selected" | awk '{print $1}')
  instance_state=$(echo "$selected" | awk '{print $(NF-2)}')
  instance_name=$(echo "$selected" | awk '{for(i=2;i<=NF-3;i++) printf "%s%s", $i, (i<NF-3 ? " " : "")}')
}

_confirm_action() {
  case "$instance_state" in
    "running")
      action="STOP"
      ;;
    "stopped")
      action="START"
      ;;
    *)
      echo "Cannot toggle instance in state: $instance_state"
      echo "Instance must be in 'running' or 'stopped' state"
      exit 1
      ;;
  esac

  echo "=> About to $action instance \"$instance_name ($instance_id)\" in region \"$region\""

  while true; do
    read -p "Is that information ok? [y/n]" yn
    case $yn in
      [yY] )
        echo "Thank you!."
        _toggle_instance
        break;;
      [nN] )
        echo "Skipping the operation. Bye :wave:"
        break
        ;;
      * )
        echo "Invalid response. Please type \"y\" or \"n\""
        ;;
    esac
  done
}

_toggle_instance() {
  case "$instance_state" in
    "running")
      echo "Stopping instance $instance_id..."
      aws ec2 stop-instances \
        --region $region \
        --instance-ids $instance_id
      echo "Stop command sent successfully"
      ;;
    "stopped")
      echo "Starting instance $instance_id..."
      aws ec2 start-instances \
        --region $region \
        --instance-ids $instance_id
      echo "Start command sent successfully"
      ;;
  esac
}

_select_region
_select_instance
_confirm_action
